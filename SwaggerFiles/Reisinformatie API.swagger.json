{
  "swagger": "2.0",
  "info": {
    "title": "Reisinformatie API",
    "version": "1.0",
    "description": "Reisinformatie API"
  },
  "host": "gateway.apiportal.ns.nl",
  "basePath": "/reisinformatie-api",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/api/v1/calamities": {
      "get": {
        "description": "List of calamities",
        "operationId": "getCalamities",
        "summary": "getCalamities",
        "tags": [
          "Calamities"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "The language in which to return the calamities, note that not all calamities are translated.",
            "type": "string",
            "enum": [
              "nl",
              "en"
            ]
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of calamities",
            "schema": {
              "$ref": "#/definitions/Melding"
            }
          },
          "400": {
            "description": "A list of calamities",
            "schema": {
              "$ref": "#/definitions/Melding"
            }
          },
          "500": {
            "description": "A list of calamities",
            "schema": {
              "$ref": "#/definitions/Melding"
            }
          }
        }
      }
    },
    "/api/v2/disruptions/station/{code}": {
      "get": {
        "description": "Disruptions for a station, code is either a UIC code or old-skool station code",
        "operationId": "getStationDisruption",
        "summary": "getStationDisruption",
        "tags": [
          "Disruptions"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The UICCode or the station code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "400": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "500": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          }
        }
      }
    },
    "/api/v2/disruptions": {
      "get": {
        "description": "List of disruptions/maintenance.",
        "operationId": "getDisruptions",
        "summary": "getDisruptions",
        "tags": [
          "Disruptions"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the disruptions. If not present both will be returned.",
            "type": "string",
            "enum": [
              "storing",
              "werkzaamheid"
            ]
          },
          {
            "name": "actual",
            "in": "query",
            "description": "Whether to only return disruptions within 2 hours of the request.",
            "type": "boolean"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language in which to return the disruption messages, note that not all messages are translated.",
            "type": "string",
            "enum": [
              "nl",
              "en"
            ]
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of disruptions",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "400": {
            "description": "A list of disruptions",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "500": {
            "description": "A list of disruptions",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          }
        }
      }
    },
    "/api/v2/disruptions/{id}": {
      "get": {
        "description": "Specific disruption/maintenance",
        "operationId": "getDisruption",
        "summary": "getDisruption",
        "tags": [
          "Disruptions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the disruptions",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "400": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          },
          "500": {
            "description": "The disruption",
            "schema": {
              "$ref": "#/definitions/Verstoring"
            }
          }
        }
      }
    },
    "/api/v2/price": {
      "get": {
        "description": "Get the price for a specified trip, either by using ctxRecon or fromStation, toStation and plannedFromTime",
        "operationId": "getPrice",
        "summary": "getPrice",
        "tags": [
          "Price"
        ],
        "parameters": [
          {
            "name": "ctxRecon",
            "in": "query",
            "description": "reconstruction context to use as basis for finding trip, use either this or fromStation, toStation and plannedFromTime",
            "type": "string"
          },
          {
            "name": "fromStation",
            "in": "query",
            "description": "departure station code, e.g. UT, ASD",
            "type": "string"
          },
          {
            "name": "toStation",
            "in": "query",
            "description": "arrival station code, e.g. UT, ASD",
            "type": "string"
          },
          {
            "name": "plannedFromTime",
            "in": "query",
            "description": "departure date time in ISO8601",
            "type": "string"
          },
          {
            "name": "plannedArrivalTime",
            "in": "query",
            "description": "arrival date time in ISO8601",
            "type": "string"
          },
          {
            "name": "travelClass",
            "in": "query",
            "description": "The class to travel.",
            "type": "string",
            "default": "2",
            "enum": [
              "1",
              "2"
            ]
          },
          {
            "name": "travelType",
            "in": "query",
            "description": "The type, single or return for a trip",
            "type": "string",
            "default": "single",
            "enum": [
              "single",
              "return"
            ]
          },
          {
            "name": "adults",
            "in": "query",
            "description": "Format - int32. Number of adults to take into account.",
            "type": "integer",
            "default": "1"
          },
          {
            "name": "children",
            "in": "query",
            "description": "Format - int32. Number of children to take into account.",
            "type": "integer",
            "default": "0"
          },
          {
            "name": "routeId",
            "in": "query",
            "description": "filter trip by routeId",
            "type": "string",
            "default": ""
          },
          {
            "name": "x-api-key",
            "in": "header",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/Price"
            }
          },
          "400": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/Price"
            }
          },
          "500": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/Price"
            }
          }
        }
      }
    },
    "/api/v2/price/international": {
      "get": {
        "description": "Get the price for a specified international trip, by using fromStation, toStation and plannedFromTime",
        "operationId": "getInternationalPrice",
        "summary": "getInternationalPrice",
        "tags": [
          "International Price"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/TripFare"
            }
          },
          "400": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/TripFare"
            }
          },
          "500": {
            "description": "The price of the journey.",
            "schema": {
              "$ref": "#/definitions/TripFare"
            }
          }
        }
      }
    },
    "/api/v2/stations": {
      "get": {
        "description": "List of stations",
        "operationId": "getAllStations",
        "summary": "getAllStations",
        "tags": [
          "Stations"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of stations",
            "schema": {
              "$ref": "#/definitions/StationRepresentation"
            }
          },
          "400": {
            "description": "List of stations",
            "schema": {
              "$ref": "#/definitions/StationRepresentation"
            }
          },
          "500": {
            "description": "List of stations",
            "schema": {
              "$ref": "#/definitions/StationRepresentation"
            }
          }
        }
      }
    },
    "/api/v2/arrivals": {
      "get": {
        "description": "Arrival times for a specified station. Either the UIC code or station is required",
        "operationId": "getArrivals",
        "summary": "getArrivals",
        "tags": [
          "Arrivals"
        ],
        "parameters": [
          {
            "name": "dateTime",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). return departures or arrivals starting at a given dateTime in ISO8601",
            "type": "string"
          },
          {
            "name": "maxJourneys",
            "in": "query",
            "description": "Format - int32. number of departures or arrivals to return",
            "type": "integer",
            "default": "25"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "language to use for translatable messages. Note that not all messages are translated.",
            "type": "string",
            "default": "nl",
            "enum": [
              "nl",
              "en"
            ]
          },
          {
            "name": "station",
            "in": "query",
            "description": "specify a station by NS abbreviation/code (e.g. ASD or UT)",
            "type": "string"
          },
          {
            "name": "uicCode",
            "in": "query",
            "description": "specify a station by UIC code (84xxxxx)",
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "forces to use a certain source",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of arrival times",
            "schema": {
              "$ref": "#/definitions/ArrivalBoard"
            }
          },
          "400": {
            "description": "List of arrival times",
            "schema": {
              "$ref": "#/definitions/ArrivalBoard"
            }
          },
          "500": {
            "description": "List of arrival times",
            "schema": {
              "$ref": "#/definitions/ArrivalBoard"
            }
          }
        }
      }
    },
    "/api/v2/departures": {
      "get": {
        "description": "Departure times for a specified station. Either the UIC code or station is required.",
        "operationId": "getDepartures",
        "summary": "getDepartures",
        "tags": [
          "Departures"
        ],
        "parameters": [
          {
            "name": "dateTime",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). return departures or arrivals starting at a given dateTime in ISO8601",
            "type": "string"
          },
          {
            "name": "maxJourneys",
            "in": "query",
            "description": "Format - int32. number of departures or arrivals to return",
            "type": "integer",
            "default": "25"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "language to use for translatable messages. Note that not all messages are translated.",
            "type": "string",
            "default": "nl",
            "enum": [
              "nl",
              "en"
            ]
          },
          {
            "name": "station",
            "in": "query",
            "description": "specify a station by NS abbreviation/code (e.g. ASD or UT)",
            "type": "string"
          },
          {
            "name": "uicCode",
            "in": "query",
            "description": "specify a station by UIC code (84xxxxx)",
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "forces to use a certain source",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of departure times",
            "schema": {
              "$ref": "#/definitions/DepartureBoard"
            }
          },
          "400": {
            "description": "List of departure times",
            "schema": {
              "$ref": "#/definitions/DepartureBoard"
            }
          },
          "500": {
            "description": "List of departure times",
            "schema": {
              "$ref": "#/definitions/DepartureBoard"
            }
          }
        }
      }
    },
    "/api/v3/trips": {
      "get": {
        "description": "Searches for a travel advice with the specified options between the possible backends (HARP, 9292 or PAS/AVG). Defaults to legacy XML implementation, specify header in order to get JSON",
        "operationId": "getTrips",
        "summary": "getTrips",
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "originLat",
            "in": "query",
            "description": "Latitude of station/stop coordinate of the trip’s origin",
            "type": "string"
          },
          {
            "name": "originLng",
            "in": "query",
            "description": "Longitude of station/stop coordinate of the trip’s origin",
            "type": "string"
          },
          {
            "name": "destinationLat",
            "in": "query",
            "description": "Latitude of station/stop coordinate of the trip’s destination",
            "type": "string"
          },
          {
            "name": "destinationLng",
            "in": "query",
            "description": "Longitude of station/stop coordinate of the trip’s destination",
            "type": "string"
          },
          {
            "name": "viaLat",
            "in": "query",
            "description": "Latitude of station/stop coordinate of the trip’s via point",
            "type": "string"
          },
          {
            "name": "viaLng",
            "in": "query",
            "description": "Longitude of station/stop coordinate of the trip’s via point",
            "type": "string"
          },
          {
            "name": "viaWaitTime",
            "in": "query",
            "description": "Format - int32. Waiting time at the via location, exclusive of transfer time",
            "type": "integer"
          },
          {
            "name": "dateTime",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). Departure date / time for the search. defaults to server time (Europe/Amsterdam)",
            "type": "string"
          },
          {
            "name": "searchForArrival",
            "in": "query",
            "description": "If set, the date and time parameters specify the arrival time for the trip search instead of the departure time",
            "type": "boolean"
          },
          {
            "name": "previousAdvices",
            "in": "query",
            "description": "Format - int32. Minimum number of advices before the search time",
            "type": "integer"
          },
          {
            "name": "nextAdvices",
            "in": "query",
            "description": "Format - int32. Minimum number of trips after the search time",
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Defines the starting point for the scroll back or forth operation. Use the scrB value from a previous result to scroll backwards in time and use the scrF value to scroll forward",
            "type": "string"
          },
          {
            "name": "addChangeTime",
            "in": "query",
            "description": "Format - int32. Extra time required at all transfers to change trains",
            "type": "integer"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language to return information for (only a small subset of text is translated, mainly notes)",
            "type": "string"
          },
          {
            "name": "polylines",
            "in": "query",
            "description": "Language to return information for (only a small subset of text is translated, mainly notes)",
            "type": "boolean"
          },
          {
            "name": "fromZip",
            "in": "query",
            "description": "(legacy parameter, not supported for JSON) zip code for origin",
            "type": "string"
          },
          {
            "name": "toZip",
            "in": "query",
            "description": "(legacy parameter, not supported for JSON) zip code for destination",
            "type": "string"
          },
          {
            "name": "travelMethodFrom",
            "in": "query",
            "description": "(legacy parameter, not supported for JSON) travel method for origin",
            "type": "string"
          },
          {
            "name": "travelMethodTo",
            "in": "query",
            "description": "(legacy parameter, not supported for JSON) travel method for destination",
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "Name/constant of product customer will use in travel, if omitted defaults to ROS",
            "type": "string",
            "enum": [
              "OVCHIPKAART_ENKELE_REIS",
              "OVCHIPKAART_RETOUR",
              "TRAJECT_VRIJ_MAAND",
              "TRAJECT_VRIJ_JAAR",
              "BUSINESS_CARD_TRAJECT_VRIJ_JAAR",
              "DAL_VOORDEEL",
              "ALTIJD_VOORDEEL",
              "DAL_VRIJ",
              "WEEKEND_VRIJ",
              "ALTIJD_VRIJ",
              "BUSINESSCARD",
              "BUSINESSCARD_DAL",
              "STUDENT_WEEK",
              "STUDENT_WEEKEND",
              "VDU",
              "SAMENREISKORTING",
              "TRAJECT_VRIJ",
              "RAILRUNNER",
              "ETICKET_ENKELE_REIS",
              "ETICKET_RETOUR",
              "ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR",
              "ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS",
              "NSI"
            ]
          },
          {
            "name": "travelClass",
            "in": "query",
            "description": "class of travel to use when calculating product prices",
            "type": "string",
            "default": "SECOND_CLASS",
            "enum": [
              "FIRST_CLASS",
              "SECOND_CLASS"
            ]
          },
          {
            "name": "discount",
            "in": "query",
            "description": "discount of travel to use when calculating product prices",
            "type": "string",
            "enum": [
              "NO_CHARGE",
              "DISCOUNT_40_PERCENT",
              "DISCOUNT_20_PERCENT",
              "FIP_DISCOUNT",
              "NO_DISCOUNT"
            ]
          },
          {
            "name": "productStationFrom",
            "in": "query",
            "description": "Station from which a travel product has been purchased (intended for TrajectVrij)",
            "type": "string"
          },
          {
            "name": "productStationTo",
            "in": "query",
            "description": "Station to which a travel product has been purchased (intended for TrajectVrij)",
            "type": "string"
          },
          {
            "name": "yearCard",
            "in": "query",
            "description": "Show options which are only allowed with a year card",
            "type": "boolean"
          },
          {
            "name": "originTransit",
            "in": "query",
            "description": "Return trip advices with transit options to start travel from origin",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "originWalk",
            "in": "query",
            "description": "Return trip advices with walking options to start travel from origin to a train station (first mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "originBike",
            "in": "query",
            "description": "Return trip advices with biking options to start travel from origin to a train station (first mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "originCar",
            "in": "query",
            "description": "Return trip advices with car options to start travel from origin to a train station (first mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "originName",
            "in": "query",
            "description": "A name that is returned as the origin in a trip",
            "type": "string"
          },
          {
            "name": "travelAssistanceTransferTime",
            "in": "query",
            "description": "Format - int32. Extra transfertime for the trip assistance booking engine PAS",
            "type": "integer",
            "default": "0"
          },
          {
            "name": "searchForAccessibleTrip",
            "in": "query",
            "description": "Return trip advices that are accessible. (might be bookable too)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "destinationTransit",
            "in": "query",
            "description": "Return trip advices with transit options to finish travel to the destination",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "destinationWalk",
            "in": "query",
            "description": "Return trip advices with walking options to finish travel to the destination (last mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "destinationBike",
            "in": "query",
            "description": "Return trip advices with biking options to finish travel to the destination (last mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "destinationCar",
            "in": "query",
            "description": "Return trip advices with car options to finish travel to the destination (last mile)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "destinationName",
            "in": "query",
            "description": "A name that is returned as the destination in a trip",
            "type": "string"
          },
          {
            "name": "accessibilityEquipment1",
            "in": "query",
            "description": "Accesibility equipment to use when searching for trip assistance options (AVG/PAS)",
            "type": "string"
          },
          {
            "name": "accessibilityEquipment2",
            "in": "query",
            "description": "Secondary accesibility equipment to use when searching for trip assistance options (AVG/PAS)",
            "type": "string"
          },
          {
            "name": "excludeHighSpeedTrains",
            "in": "query",
            "description": "Exclude high speed trains from results (including those with a required reservation)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "excludeReservationRequired",
            "in": "query",
            "description": "Exclude trains for domestic trips that require a reservation (e.g. Thalys)",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "localTrainsOnly",
            "in": "query",
            "description": "Search only for local train options, i.e. sprinter/sneltrein/stoptrein",
            "type": "boolean"
          },
          {
            "name": "filterTransportMode",
            "in": "query",
            "description": "Search for specified product classes, i.e. SPR, ST, IC, ICE",
            "type": "string"
          },
          {
            "name": "excludeTransportMode",
            "in": "query",
            "description": "Search for trips excluding the specified product classes, i.e. SPR, ST, IC, ICE",
            "type": "string"
          },
          {
            "name": "passing",
            "in": "query",
            "description": "Show intermediate stops that the journey passes but doesn't stop at",
            "type": "boolean",
            "default": "false"
          },
          {
            "name": "travelRequestType",
            "in": "query",
            "description": "directionsOnly only plans a google directions (walk/bike/car) advice",
            "type": "string",
            "enum": [
              "DIRECTIONS_ONLY",
              "DIRECTIONS",
              "DEFAULT"
            ]
          },
          {
            "name": "originEVACode",
            "in": "query",
            "description": "EVA code of the station of the trips origin",
            "type": "string"
          },
          {
            "name": "destinationEVACode",
            "in": "query",
            "description": "EVA code of the station of the trips destination",
            "type": "string"
          },
          {
            "name": "viaEVACode",
            "in": "query",
            "description": "EVA code of the station of the trips via point",
            "type": "string"
          },
          {
            "name": "shorterChange",
            "in": "query",
            "description": "Changes the CHANGE_NOT_POSSIBLE status to CHANGE_COULD_BE_POSSIBLE if the traveler can walk twice as fast",
            "type": "boolean"
          },
          {
            "name": "routeId",
            "in": "query",
            "description": "The preferred routeId (optional) if the trip has multiple routes.",
            "type": "string",
            "default": ""
          },
          {
            "name": "fromStation",
            "in": "query",
            "description": "Station code of the trips origin",
            "type": "string"
          },
          {
            "name": "toStation",
            "in": "query",
            "description": "Station code of the trips destination",
            "type": "string"
          },
          {
            "name": "originUicCode",
            "in": "query",
            "description": "UIC code of the station of the trips origin",
            "type": "string"
          },
          {
            "name": "destinationUicCode",
            "in": "query",
            "description": "UIC code of the station of the trips destination",
            "type": "string"
          },
          {
            "name": "viaUicCode",
            "in": "query",
            "description": "UIC code of the station of the trips via point",
            "type": "string"
          },
          {
            "name": "bikeCarriageRequired",
            "in": "query",
            "description": "Whether a bike space is required on the train(s).",
            "type": "boolean"
          },
          {
            "name": "viaStation",
            "in": "query",
            "description": "Station code of the trips via point",
            "type": "string"
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Whether the provided time is the departure time.",
            "type": "boolean"
          },
          {
            "name": "minimalChangeTime",
            "in": "query",
            "description": "Format - int32. The minimum change time between transfers in minutes.",
            "type": "integer"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Content type to return",
            "type": "string",
            "enum": [
              "application/json",
              "text/xml"
            ]
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique request id to be specified in the places",
            "type": "string"
          },
          {
            "name": "X-Caller-ID",
            "in": "header",
            "description": "The caller of the API",
            "type": "string"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Account details to use when querying trip assistance options",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          },
          "400": {
            "description": "List of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          },
          "500": {
            "description": "List of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          }
        }
      }
    },
    "/api/v3/trips/trip": {
      "get": {
        "description": "Reconstruct a trip if possible using the given reconCtx (representation of a trip found in a travel advice)",
        "operationId": "getTrip",
        "summary": "getTrip",
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "ctxRecon",
            "in": "query",
            "description": "reconstruction context to use as basis for finding trip",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "date to use when reconstructing trip, may be a different date than the trip was originally planned",
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "language to return text in (not all texts are translated)",
            "type": "string",
            "default": "nl"
          },
          {
            "name": "product",
            "in": "query",
            "description": "name/constant of product customer will use in travel, if omitted defaults to ROS",
            "type": "string"
          },
          {
            "name": "travelClass",
            "in": "query",
            "description": "class of travel to use when calculating product prices",
            "type": "string",
            "default": "2"
          },
          {
            "name": "discount",
            "in": "query",
            "description": "discount of travel to use when calculating product prices",
            "type": "string"
          },
          {
            "name": "travelRequestType",
            "in": "query",
            "description": "Type of travelRequest, with or without directions",
            "type": "string",
            "default": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Content type to return (application/json or text/xml)",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          },
          "400": {
            "description": "A list of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          },
          "500": {
            "description": "A list of available trips",
            "schema": {
              "$ref": "#/definitions/TravelAdvice"
            }
          }
        }
      }
    },
    "/api/v1/exitside": {
      "get": {
        "description": "Retrieves the exitside for a given route and track combination",
        "operationId": "getExitSide",
        "summary": "getExitSide",
        "tags": [
          "Exitside"
        ],
        "parameters": [
          {
            "name": "originUicCode",
            "in": "query",
            "description": "UIC code for the previous station",
            "type": "string"
          },
          {
            "name": "uicCode",
            "in": "query",
            "description": "UIC code for the station the exit side is relevant",
            "type": "string"
          },
          {
            "name": "track",
            "in": "query",
            "description": "Track number for the station the exit side is relevant",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exitside for the given input, either LEFT, RIGHT or UNKNOWN",
            "schema": {
              "$ref": "#/definitions/ExitsideResponse"
            }
          },
          "400": {
            "description": "Exitside for the given input, either LEFT, RIGHT or UNKNOWN",
            "schema": {
              "$ref": "#/definitions/ExitsideResponse"
            }
          },
          "500": {
            "description": "Exitside for the given input, either LEFT, RIGHT or UNKNOWN",
            "schema": {
              "$ref": "#/definitions/ExitsideResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VerstoringReisadvies": {
      "type": "object",
      "properties": {
        "titel": {
          "type": "string"
        },
        "advies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "translatableTexts": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JourneyDetailLink": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "BTM",
            "TRAIN_XML",
            "TRAIN_JSON"
          ],
          "type": "string"
        },
        "link": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "uriBuilder": {
              "type": "object"
            },
            "rel": {
              "type": "string"
            },
            "rels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "uri": {
              "format": "uri",
              "type": "string"
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "type": {
              "type": "string"
            }
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "head": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "lead": {
          "type": "string"
        },
        "type": {
          "enum": [
            "MAINTENANCE",
            "DISRUPTION"
          ],
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        }
      }
    },
    "BaanvakBeperking": {
      "type": "object",
      "properties": {
        "van": {
          "$ref": "#/definitions/StationCode"
        },
        "tot": {
          "$ref": "#/definitions/StationCode"
        },
        "via": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StationCode"
          }
        },
        "richting": {
          "enum": [
            "HEEN",
            "HEEN_EN_TERUG"
          ],
          "type": "string"
        }
      }
    },
    "Stop": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lng": {
          "type": "number"
        },
        "lat": {
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "uicCode": {
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        },
        "products": {
          "format": "int32",
          "type": "integer"
        },
        "routeIdx": {
          "format": "int32",
          "type": "integer"
        },
        "plannedDepartureDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "plannedDepartureTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "actualDepartureDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "actualDepartureTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "plannedDepartureTrack": {
          "type": "string"
        },
        "actualDepartureTrack": {
          "type": "string"
        },
        "plannedArrivalDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "plannedArrivalTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "actualArrivalDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "actualArrivalTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "plannedArrivalTrack": {
          "type": "string"
        },
        "actualArrivalTrack": {
          "type": "string"
        },
        "departureDelayInSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "arrivalDelayInSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "cancelled": {
          "type": "boolean"
        },
        "passing": {
          "type": "boolean"
        },
        "quayCode": {
          "type": "string"
        }
      }
    },
    "Melding": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "titel": {
          "type": "string"
        },
        "type": {
          "enum": [
            "prio_1",
            "prio_2",
            "prio_3"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "bodyItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BodyItem"
          }
        }
      }
    },
    "DepartureArrivalMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "style": {
          "enum": [
            "INFO",
            "WARNING"
          ],
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "categoryCode": {
          "type": "string"
        },
        "shortCategoryName": {
          "type": "string"
        },
        "longCategoryName": {
          "type": "string"
        },
        "operatorCode": {
          "type": "string"
        },
        "operatorName": {
          "type": "string"
        },
        "type": {
          "enum": [
            "TRAIN",
            "BUS",
            "TRAM",
            "METRO",
            "FERRY",
            "WALK",
            "BIKE",
            "CAR",
            "TAXI",
            "SUBWAY",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "StationCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PrijsTraject": {
      "type": "object",
      "properties": {
        "idVerkoopcombinatie": {
          "format": "int32",
          "type": "integer"
        },
        "bedrag": {
          "format": "int32",
          "type": "integer"
        },
        "opstaptarief": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Step": {
      "type": "object",
      "properties": {
        "distanceInMeters": {
          "format": "int32",
          "type": "integer"
        },
        "durationInSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "startLocation": {
          "$ref": "#/definitions/Location"
        },
        "endLocation": {
          "$ref": "#/definitions/Location"
        },
        "instructions": {
          "type": "string"
        }
      }
    },
    "TravelAdvice": {
      "type": "object",
      "properties": {
        "trips": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trip"
          }
        },
        "scrollRequestBackwardContext": {
          "type": "string"
        },
        "scrollRequestForwardContext": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "firstDeparture": {
          "format": "date-time",
          "type": "string"
        },
        "firstArrival": {
          "format": "date-time",
          "type": "string"
        },
        "firstTrip": {
          "$ref": "#/definitions/Trip"
        },
        "lastTripDeparture": {
          "format": "date-time",
          "type": "string"
        },
        "lastTripArrival": {
          "format": "date-time",
          "type": "string"
        },
        "lastTrip": {
          "$ref": "#/definitions/Trip"
        }
      }
    },
    "LocalizableStrings": {
      "type": "object",
      "properties": {
        "language": {
          "enum": [
            "DUTCH",
            "ENGLISH"
          ],
          "type": "string"
        },
        "locale": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "variant": {
              "type": "string"
            },
            "extensionKeys": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "unicodeLocaleAttributes": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "unicodeLocaleKeys": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "iso3Language": {
              "type": "string"
            },
            "iso3Country": {
              "type": "string"
            },
            "displayLanguage": {
              "type": "string"
            },
            "displayScript": {
              "type": "string"
            },
            "displayCountry": {
              "type": "string"
            },
            "displayVariant": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "language": {
              "type": "string"
            }
          }
        }
      }
    },
    "StationRepresentation": {
      "type": "object",
      "properties": {
        "self": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "uriBuilder": {
              "type": "object"
            },
            "rel": {
              "type": "string"
            },
            "rels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "uri": {
              "format": "uri",
              "type": "string"
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "type": {
              "type": "string"
            }
          }
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "uriBuilder": {
                "type": "object"
              },
              "rel": {
                "type": "string"
              },
              "rels": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "uri": {
                "format": "uri",
                "type": "string"
              },
              "params": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Station"
          }
        },
        "meta": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "EticketOption": {
      "type": "object",
      "properties": {
        "productType": {
          "type": "string"
        },
        "priceIncents": {
          "format": "int32",
          "type": "integer"
        },
        "travelClass": {
          "enum": [
            "FIRST_CLASS",
            "SECOND_CLASS"
          ],
          "type": "string"
        },
        "travelDiscount": {
          "enum": [
            "NO_DISCOUNT",
            "DISCOUNT_20",
            "DISCOUNT_40"
          ],
          "type": "string"
        }
      }
    },
    "Toeslag": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "bedrag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RouteStation": {
      "type": "object"
    },
    "Departure": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plannedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "actualDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "plannedTrack": {
          "type": "string"
        },
        "actualTrack": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "trainCategory": {
          "type": "string"
        },
        "cancelled": {
          "type": "boolean"
        },
        "journeyDetailRef": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepartureArrivalMessage"
          }
        },
        "departureStatus": {
          "enum": [
            "ON_STATION",
            "INCOMING",
            "DEPARTED"
          ],
          "type": "string"
        }
      }
    },
    "TripOriginDestination": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lng": {
          "type": "number"
        },
        "lat": {
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "uicCode": {
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        },
        "products": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "STATION",
            "ADDRESS",
            "POINT_OF_INTEREST"
          ],
          "type": "string"
        },
        "prognosisType": {
          "type": "string"
        },
        "plannedTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "plannedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "actualTimeZoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "actualDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "plannedTrack": {
          "type": "string"
        },
        "actualTrack": {
          "type": "string"
        },
        "exitSide": {
          "enum": [
            "LEFT",
            "RIGHT",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "checkinStatus": {
          "enum": [
            "CHECKIN",
            "CHECKOUT",
            "OVERCHECK",
            "DETOUR",
            "REQUIRED_CHECK_OUT_IN",
            "NOTHING"
          ],
          "type": "string"
        },
        "travelAssistanceBookingInfo": {
          "$ref": "#/definitions/ServiceBookingInfo"
        },
        "travelAssistanceMeetingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "quayCode": {
          "type": "string"
        },
        "domestic": {
          "type": "boolean"
        },
        "latestKnownTrack": {
          "type": "string"
        }
      }
    },
    "Verstoring": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "MELDING_PRIO_1",
            "MELDING_PRIO_2",
            "MELDING_PRIO_3",
            "STORING",
            "WERKZAAMHEID",
            "EVENEMENT"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "baanvakBeperking": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaanvakBeperking"
          }
        },
        "reden": {
          "type": "string"
        },
        "extraReistijd": {
          "type": "string"
        },
        "leafletUrl": {
          "type": "string"
        },
        "reisadviezen": {
          "$ref": "#/definitions/Reisadviezen"
        },
        "geldigheidsLijst": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Geldigheid"
          }
        },
        "verwachting": {
          "type": "string"
        },
        "gevolg": {
          "type": "string"
        },
        "gevolgType": {
          "type": "string"
        },
        "fase": {
          "type": "string"
        },
        "faseLabel": {
          "type": "string"
        },
        "impact": {
          "type": "integer"
        },
        "maatschappij": {
          "type": "integer"
        },
        "alternatiefVervoer": {
          "type": "string"
        },
        "landelijk": {
          "type": "boolean"
        },
        "oorzaak": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "meldtijd": {
          "format": "date-time",
          "type": "string"
        },
        "periode": {
          "type": "string"
        },
        "baanvakken": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Baanvak"
          }
        },
        "trajecten": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Traject"
          }
        },
        "versie": {
          "type": "string"
        },
        "volgnummer": {
          "type": "string"
        },
        "prioriteit": {
          "format": "int32",
          "type": "integer"
        },
        "translatableTexts": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Namen": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string"
        },
        "kort": {
          "type": "string"
        },
        "middel": {
          "type": "string"
        }
      }
    },
    "LatLng": {
      "type": "object",
      "properties": {
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Reisrecht": {
      "type": "object",
      "properties": {
        "reistype": {
          "format": "int32",
          "type": "integer"
        },
        "prijsReisrecht": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrijsReisrecht"
          }
        },
        "routeaanduiding": {
          "format": "int32",
          "type": "integer"
        },
        "routeId": {
          "type": "string"
        },
        "traject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Traject"
          }
        }
      }
    },
    "Download": {
      "type": "object",
      "properties": {
        "titel": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "length": {
          "format": "int64",
          "type": "integer"
        },
        "mimeType": {
          "type": "string"
        },
        "lastModified": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Reisadviezen": {
      "type": "object",
      "properties": {
        "titel": {
          "type": "string"
        },
        "translatableTexts": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verstoringreisadvies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerstoringReisadvies"
          }
        },
        "verstoringReisAdvies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerstoringReisadvies"
          }
        }
      }
    },
    "Trip": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "plannedDurationInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "transfers": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CHANGE_NOT_POSSIBLE",
            "CHANGE_COULD_BE_POSSIBLE",
            "ALTERNATIVE_TRANSPORT",
            "DISRUPTION",
            "MAINTENANCE",
            "UNCERTAIN",
            "REPLACEMENT",
            "ADDITIONAL",
            "SPECIAL",
            "NORMAL"
          ],
          "type": "string"
        },
        "legs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Leg"
          }
        },
        "overviewPolyLine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LatLng"
          }
        },
        "checksum": {
          "type": "string"
        },
        "crowdForecast": {
          "enum": [
            "UNKNOWN",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "type": "string"
        },
        "punctuality": {
          "format": "double",
          "type": "number"
        },
        "ctxRecon": {
          "type": "string"
        },
        "actualDurationInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "idx": {
          "format": "int32",
          "type": "integer"
        },
        "optimal": {
          "type": "boolean"
        },
        "fares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TripFare"
          }
        },
        "productFare": {
          "$ref": "#/definitions/TripFare"
        },
        "fareOptions": {
          "$ref": "#/definitions/TripFareOptions"
        },
        "shareUrl": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "uriBuilder": {
              "type": "object"
            },
            "rel": {
              "type": "string"
            },
            "rels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "uri": {
              "format": "uri",
              "type": "string"
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "type": {
              "type": "string"
            }
          }
        },
        "type": {
          "enum": [
            "NS",
            "NS_ACCESSIBLE",
            "NEGENTWEE",
            "GOOGLE",
            "PAS"
          ],
          "type": "string"
        },
        "realtime": {
          "type": "boolean"
        },
        "travelAssistanceInfo": {
          "$ref": "#/definitions/TravelAssistanceInfo"
        },
        "routeId": {
          "type": "string"
        },
        "firstLeg": {
          "$ref": "#/definitions/Leg"
        },
        "lastLeg": {
          "$ref": "#/definitions/Leg"
        }
      }
    },
    "DepartureBoard": {
      "type": "object",
      "properties": {
        "departures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Departure"
          }
        }
      }
    },
    "BodyItem": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "titel": {
          "type": "string"
        },
        "downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Download"
          }
        }
      }
    },
    "ExitsideResponse": {
      "type": "object"
    },
    "Arrival": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plannedTrack": {
          "type": "string"
        },
        "actualTrack": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "trainCategory": {
          "type": "string"
        },
        "cancelled": {
          "type": "boolean"
        },
        "journeyDetailRef": {
          "type": "string"
        },
        "plannedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "actualDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepartureArrivalMessage"
          }
        },
        "routeStations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteStation"
          }
        },
        "actualOrPlannedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ArrivalBoard": {
      "type": "object",
      "properties": {
        "arrivals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Arrival"
          }
        }
      }
    },
    "Leg": {
      "type": "object",
      "properties": {
        "idx": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "travelType": {
          "enum": [
            "PUBLIC_TRANSIT",
            "WALK",
            "TRANSFER",
            "BIKE",
            "CAR",
            "KISS",
            "TAXI",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "distance": {
          "format": "int32",
          "type": "integer"
        },
        "cancelled": {
          "type": "boolean"
        },
        "changePossible": {
          "type": "boolean"
        },
        "alternativeTransport": {
          "type": "boolean"
        },
        "journeyStatus": {
          "enum": [
            "PLANNED",
            "REPLACEMENT",
            "ADDITIONAL",
            "SPECIAL"
          ],
          "type": "string"
        },
        "journeyDetailRef": {
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/TripOriginDestination"
        },
        "destination": {
          "$ref": "#/definitions/TripOriginDestination"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "stops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stop"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "crowdForecast": {
          "enum": [
            "UNKNOWN",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "type": "string"
        },
        "punctuality": {
          "format": "double",
          "type": "number"
        },
        "crossPlatformTransfer": {
          "type": "boolean"
        },
        "shorterStock": {
          "type": "boolean"
        },
        "changeCouldBePossible": {
          "type": "boolean"
        },
        "shorterStockWarning": {
          "type": "string"
        },
        "shorterStockClassification": {
          "enum": [
            "BUSY",
            "EXTRA_BUSY"
          ],
          "type": "string"
        },
        "journeyDetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JourneyDetailLink"
          }
        },
        "reachable": {
          "type": "boolean"
        },
        "plannedDurationInMinutes": {
          "type": "integer"
        },
        "travelAssistanceDeparture": {
          "$ref": "#/definitions/ServiceBookingInfo"
        },
        "travelAssistanceArrival": {
          "$ref": "#/definitions/ServiceBookingInfo"
        },
        "overviewPolyLine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LatLng"
          }
        },
        "lastStop": {
          "$ref": "#/definitions/Stop"
        },
        "firstStop": {
          "$ref": "#/definitions/Stop"
        },
        "travelOrNeccesaryWalk": {
          "type": "boolean"
        },
        "publicTransit": {
          "type": "boolean"
        },
        "punctualityInternal": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TripFareOptions": {
      "type": "object",
      "properties": {
        "eticketOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EticketOption"
          }
        },
        "supplementsBasedOnSelectedFare": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TripFareSupplement"
          }
        },
        "eticketBuyable": {
          "type": "boolean"
        },
        "internationalBookable": {
          "type": "boolean"
        },
        "international": {
          "type": "boolean"
        },
        "possibleWithOvChipkaart": {
          "type": "boolean"
        }
      }
    },
    "Station": {
      "type": "object",
      "properties": {
        "sporen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spoor"
          }
        },
        "synoniemen": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "heeftFaciliteiten": {
          "type": "boolean"
        },
        "heeftVertrektijden": {
          "type": "boolean"
        },
        "heeftReisassistentie": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "namen": {
          "$ref": "#/definitions/Namen"
        },
        "stationType": {
          "enum": [
            "STOPTREIN_STATION",
            "KNOOPPUNT_STOPTREIN_STATION",
            "SNELTREIN_STATION",
            "KNOOPPUNT_SNELTREIN_STATION",
            "INTERCITY_STATION",
            "KNOOPPUNT_INTERCITY_STATION",
            "MEGA_STATION",
            "FACULTATIEF_STATION"
          ],
          "type": "string"
        },
        "land": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "radius": {
          "format": "int32",
          "type": "integer"
        },
        "naderenRadius": {
          "format": "int32",
          "type": "integer"
        },
        "ingangsDatum": {
          "format": "date",
          "type": "string"
        },
        "eindDatum": {
          "format": "date",
          "type": "string"
        },
        "uiccode": {
          "type": "string"
        },
        "evacode": {
          "type": "string"
        },
        "openToday": {
          "type": "boolean"
        }
      }
    },
    "TripFare": {
      "type": "object",
      "properties": {
        "priceInCents": {
          "type": "integer"
        },
        "product": {
          "enum": [
            "OVCHIPKAART_ENKELE_REIS",
            "OVCHIPKAART_RETOUR",
            "TRAJECT_VRIJ_MAAND",
            "TRAJECT_VRIJ_JAAR",
            "BUSINESS_CARD_TRAJECT_VRIJ_JAAR",
            "DAL_VOORDEEL",
            "ALTIJD_VOORDEEL",
            "DAL_VRIJ",
            "WEEKEND_VRIJ",
            "ALTIJD_VRIJ",
            "BUSINESSCARD",
            "BUSINESSCARD_DAL",
            "STUDENT_WEEK",
            "STUDENT_WEEKEND",
            "VDU",
            "SAMENREISKORTING",
            "TRAJECT_VRIJ",
            "RAILRUNNER",
            "ETICKET_ENKELE_REIS",
            "ETICKET_RETOUR",
            "ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR",
            "ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS",
            "NSI"
          ],
          "type": "string"
        },
        "travelClass": {
          "enum": [
            "FIRST_CLASS",
            "SECOND_CLASS"
          ],
          "type": "string"
        },
        "priceInCentsExcludingSupplement": {
          "type": "integer"
        },
        "discountType": {
          "enum": [
            "NO_CHARGE",
            "DISCOUNT_40_PERCENT",
            "DISCOUNT_20_PERCENT",
            "FIP_DISCOUNT",
            "NO_DISCOUNT"
          ],
          "type": "string"
        },
        "supplementInCents": {
          "type": "integer"
        },
        "link": {
          "type": "string"
        },
        "priceInCentsExcludingSupplementOrPrice": {
          "type": "integer"
        }
      }
    },
    "TravelAssistanceInfo": {
      "type": "object"
    },
    "Traject": {
      "type": "object",
      "properties": {
        "vervoerders": {
          "format": "int32",
          "type": "integer"
        },
        "naamVervoer": {
          "type": "string"
        },
        "cdTariefpuntVan": {
          "format": "int32",
          "type": "integer"
        },
        "cdTariefpuntNaar": {
          "format": "int32",
          "type": "integer"
        },
        "afstand1eKlasse": {
          "format": "int32",
          "type": "integer"
        },
        "afstand2eKlasse": {
          "format": "int32",
          "type": "integer"
        },
        "indVolledig2eKlasse": {
          "type": "boolean"
        },
        "prijsTraject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrijsTraject"
          }
        }
      }
    },
    "Spoor": {
      "type": "object",
      "properties": {
        "spoorNummer": {
          "type": "string"
        }
      }
    },
    "TripFareSupplement": {
      "type": "object",
      "properties": {
        "supplementPriceInCents": {
          "format": "int32",
          "type": "integer"
        },
        "legIdx": {
          "type": "string"
        },
        "fromUICCode": {
          "type": "string"
        },
        "toUICCode": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "uriBuilder": {
              "type": "object"
            },
            "rel": {
              "type": "string"
            },
            "rels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "uri": {
              "format": "uri",
              "type": "string"
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "type": {
              "type": "string"
            }
          }
        }
      }
    },
    "Price": {
      "type": "object",
      "properties": {
        "totalPriceInCents": {
          "type": "integer"
        },
        "priceDifferenceInCentsBetweenFirstAndSecondClass": {
          "type": "integer"
        },
        "priceDifferenceInCentsBetweenJointJourneyDiscount": {
          "type": "integer"
        },
        "routeDesignation": {
          "type": "string"
        },
        "alternativeRouteDesignations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "operatorName": {
          "type": "string"
        },
        "travelDiscount": {
          "enum": [
            "NO_DISCOUNT",
            "DISCOUNT_20",
            "DISCOUNT_40"
          ],
          "type": "string"
        },
        "travelClass": {
          "enum": [
            "FIRST_CLASS",
            "SECOND_CLASS"
          ],
          "type": "string"
        },
        "reisrecht": {
          "$ref": "#/definitions/Reisrecht"
        },
        "travelProducts": {
          "type": "array",
          "items": {
            "enum": [
              "OVCHIPKAART_ENKELE_REIS",
              "OVCHIPKAART_RETOUR",
              "TRAJECT_VRIJ_MAAND",
              "TRAJECT_VRIJ_JAAR",
              "BUSINESS_CARD_TRAJECT_VRIJ_JAAR",
              "DAL_VOORDEEL",
              "ALTIJD_VOORDEEL",
              "DAL_VRIJ",
              "WEEKEND_VRIJ",
              "ALTIJD_VRIJ",
              "BUSINESSCARD",
              "BUSINESSCARD_DAL",
              "STUDENT_WEEK",
              "STUDENT_WEEKEND",
              "VDU",
              "SAMENREISKORTING",
              "TRAJECT_VRIJ",
              "RAILRUNNER",
              "ETICKET_ENKELE_REIS",
              "ETICKET_RETOUR",
              "ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR",
              "ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS",
              "NSI"
            ],
            "type": "string"
          }
        }
      }
    },
    "PrijsReisrecht": {
      "type": "object",
      "properties": {
        "idVerkoopcombinatie": {
          "format": "int32",
          "type": "integer"
        },
        "bedrag": {
          "format": "int32",
          "type": "integer"
        },
        "toeslag": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Toeslag"
          }
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "noteType": {
          "enum": [
            "UNKNOWN",
            "ATTRIBUTE",
            "INFOTEXT",
            "REALTIME",
            "TICKET",
            "HINT"
          ],
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "routeIdxFrom": {
          "format": "int32",
          "type": "integer"
        },
        "routeIdxTo": {
          "format": "int32",
          "type": "integer"
        },
        "link": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "uriBuilder": {
              "type": "object"
            },
            "rel": {
              "type": "string"
            },
            "rels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "uri": {
              "format": "uri",
              "type": "string"
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "type": {
              "type": "string"
            }
          }
        },
        "category": {
          "enum": [
            "PLATFORM_INFORMATION",
            "OVERCHECK_INSTRUCTION",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "alternativeTransport": {
          "type": "boolean"
        },
        "presentationRequired": {
          "type": "boolean"
        }
      }
    },
    "Baanvak": {
      "type": "object",
      "properties": {
        "stations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Geldigheid": {
      "type": "object",
      "properties": {
        "startDatum": {
          "format": "date-time",
          "type": "string"
        },
        "eindDatum": {
          "format": "date-time",
          "type": "string"
        },
        "startTijd": {
          "type": "string"
        },
        "eindTijd": {
          "type": "string"
        }
      }
    },
    "ServiceBookingInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tripLegIndex": {
          "type": "string"
        },
        "stationUic": {
          "type": "string"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAssistanceValue": {
          "type": "boolean"
        },
        "canChangeAssistance": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lng": {
          "type": "number"
        },
        "lat": {
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "uicCode": {
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        },
        "products": {
          "format": "int32",
          "type": "integer"
        }
      }
    }
  },
  "tags": []
}